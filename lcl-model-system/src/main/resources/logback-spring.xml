<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
        scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
                   当scan为true时，此属性生效。默认的时间间隔为1分钟。
        debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
    -->

    <springProperty scope="context" name="springAppName" source="spring.application.name" />

    <property name="CONSOLE_LOG_PATTERN" value="%date [%thread] %-5level %logger{36} - %msg%n" />
    <property name="ERROR_LOG_HOME" value="error_logs" />
    <property name="INFO_LOG_HOME" value="info_logs" />

    <appender name="CONSOLE-LOG" class="ch.qos.logback.core.ConsoleAppender">
        <withJansi>true</withJansi>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>
    <!-- 按照固定窗口模式生成日志文件，当文件大于10MB时，生成新的日志文件。
    -    窗口大小是1到10，当保存了10个归档文件后，将覆盖最早的日志。
    -    可以指定文件压缩选项ch.qos.logback.core.rolling.RollingFileAppender
    -->
    <appender name="INFO-LOG" class="com.micro.lcl.config.log.LogRollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <file>${INFO_LOG_HOME}/${springAppName}.log</file>
        <!--centos 7 指定log文件
         <file>/usr/log/${springAppName}.log</file>
         -->
        <append>true</append>
        <rollingPolicy class="com.micro.lcl.config.log.LogSizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${INFO_LOG_HOME}/${springAppName}-%d{yyyy-MM-dd}.info.%i.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>200MB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] [%logger:%line] &#45;&#45;%mdc{client} %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="ERROR-LOG" class="com.micro.lcl.config.log.LogRollingFileAppender">
        <file>${ERROR_LOG_HOME}/${springAppName}.log</file>
        <!--centos 7 指定log文件
         <file>/usr/log/${springAppName}.log</file>
         -->
        <append>true</append>
        <rollingPolicy class="com.micro.lcl.config.log.LogSizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${ERROR_LOG_HOME}/${springAppName}-%d{yyyy-MM-dd}.error.%i.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>200MB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] [%logger:%line] &#45;&#45;%mdc{client} %msg%n</pattern>
        </encoder>

    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="INFO-LOG"/>
    </appender>

    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="ERROR-LOG"/>
    </appender>

    <root level="ERROR">
        <appender-ref ref="CONSOLE-LOG" />
        <appender-ref ref="INFO-LOG" />
        <appender-ref ref="ERROR-LOG" />
    </root>

</configuration>
